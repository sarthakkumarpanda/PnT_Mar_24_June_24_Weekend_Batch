How to create own APIs and JSON
-----------------------------------

We need to install few softwares

Step 1: we need to download install NodeJS
         npm - node package manager (this we will get by default)

Step 2: Using the npm software, we have to install json-server

Step 3: We need to do environment setup for Windows
        NODE_HOME
        C:\Program Files\nodejs

         C:\Program Files\nodejs        
         C:\Program Files\nodejs\node_modules         
         C:\Program Files\nodejs\node_modules\npm\bin

Step 4: Open a cmd and type the command 
node --version
npm --version


Step 5: Open a new cmd and pass the command 
npm install -g json-server

So upto Step 5 - it completes the basic installation process

---------------------------------------------------------------------------------------------------

Now to run any API we need the json file.

Step 1: Create a json file known as students.json or employee.json and make sure the extension is .json even if you are entering the data in a notepad file,
        do not save as .txt
Step 2: Go to the path where your .json file is saved and copy the path and type this command in a new cmd
        json-server students.json
        please do not close this window, just minimize the cmd window
Step 3: Copy the url which got generated after entering the command in Step 2. In this case it is http://localhost:3000/students and open it any browser window and you
        will see the .json file content here.
Step 4: We need to create GetSingleStudent Request
        So we need to pass the url http://localhost:3000/students/1 and click on Send button then you will get the below data


{
  "id": "1",
  "name": "John Doe",
  "location": "City A",
  "phone": "123-456-7890",
  "courses": [
    "Mathematics",
    "Physics"
  ]
}

           now if you go and pass the url http://localhost:3000/students/2 then you will get the below data

{
    "id": "2",
    "name": "Jane Smith",
    "location": "City B",
    "phone": "987-654-3210",
    "courses": [
        "History",
        "English"
    ]
}

similarly you can enter the url http://localhost:3000/students/3 or http://localhost:3000/students/4 then you will get the response data accordingly.

Step 5: Now let's say you want to get all the students data then you have to create another GET Request such as GETAllStudents and pass the following url
        http://localhost:3000/students. Click on the Send button. And you will see the completed Response Data in the json format

Step 6: Now we have to create a POST request example POSTOrCREATESingleStudentData and here we also need to make sure we pass the request payload
        Also make sure that in the payload the id is not passed as it will be generated by the server.
        Of course you need to pass the url http://localhost:3000/students

And after entering the url we need to enter the request payload in the body > raw > JSON

{
    "name": "Sarthak Panda",
    "location": "Alexandria",
    "phone": "987-654-3210",
    "courses": [
        "Java",
        "Selenium"
    ]
}

Now click on Send and you will see a response payload will appear with an id in it

Step 7: Now go back and again execute the GETAllStudents request and you will see in the response payload the new id generated via Step 6 shall also display

Step 8: Now let's say you want to update this record, then create a new http request PUT for example UPDATESingleStudentData
        first enter the url http://localhost:3000/students/idvalueobtainedinthepreviousstep
        And then enter the request payload in the body

{
    "name": "Sarthak Panda",
    "location": "Alexandria",
    "phone": "987-654-3210",
    "courses": [
        "Python",
        "AI"
    ]
}

Step 9: In case you want to delete a specific record then first create a Delete http request example DELETESingleStudentData and pass the url
          http://localhost:3000/students/idvalueobtainedinthepreviousstep  and click on the send button
          No need to pass any request payload here

-------------------------------------------------------------------------------------------------------------------------------------------------------------------


        
 




      
        
